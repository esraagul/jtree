Wed Apr 25 2018 23:13:59 GMT+0200 (Mitteleuropäische Sommerzeit): last time on: 1524690839319
Wed Apr 25 2018 23:13:59 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180412-165803-158
Wed Apr 25 2018 23:13:59 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180412-224620-282
Wed Apr 25 2018 23:13:59 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180412-230555-985
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180412-232233-262
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180412-233853-465
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180412-235527-391
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180413-001451-639
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180413-003158-364
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180413-004813-781
Wed Apr 25 2018 23:14:00 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180413-004849-488
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180413-103733-439
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180413-131632-439
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180417-121227-991
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180420-145105-169
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180420-145249-354
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180420-235502-456
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-011716-613
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-012002-943
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-014259-352
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-014509-055
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-134926-024
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-233641-658
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180421-234026-254
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-222407-000
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-222454-498
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-222902-378
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-223332-006
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-223433-755
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-223710-180
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-223727-754
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-224205-887
Wed Apr 25 2018 23:14:06 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180422-224245-431
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-155703-855
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-160728-306
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-161433-707
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-161713-407
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-162012-494
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-162346-624
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-163108-805
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-164542-646
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180423-171722-418
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180424-000913-409
Wed Apr 25 2018 23:14:07 GMT+0200 (Mitteleuropäische Sommerzeit): loading session: 20180424-135510-257
Wed Apr 25 2018 23:14:09 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection: n9dbwUAKvZtFemGWAAAA, id=null, pwd=null, session=null
Wed Apr 25 2018 23:14:09 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection to ADMIN
Wed Apr 25 2018 23:14:09 GMT+0200 (Mitteleuropäische Sommerzeit): Server.refreshAdmin: socket_n9dbwUAKvZtFemGWAAAA
Wed Apr 25 2018 23:14:09 GMT+0200 (Mitteleuropäische Sommerzeit): refreshAdmin: socket_n9dbwUAKvZtFemGWAAAA, userId = owen
Wed Apr 25 2018 23:14:09 GMT+0200 (Mitteleuropäische Sommerzeit): received message messages: [{"msgName":"openSession","msgData":"20180422-224245-431"}]
Wed Apr 25 2018 23:14:09 GMT+0200 (Mitteleuropäische Sommerzeit): received message openSession: "20180422-224245-431"
Wed Apr 25 2018 23:14:34 GMT+0200 (Mitteleuropäische Sommerzeit): received message updateAppPreview: {"appId":"double-auction","options":{}}
Wed Apr 25 2018 23:22:05 GMT+0200 (Mitteleuropäische Sommerzeit): received message appSaveFileContents: {"filename":"app.js","aId":"double-auction","content":"app.description = 'Shares are traded for experimental currency in a double auction. Shares pay random dividends every period. At the end of the game, shares are worth nothing. Reference: <a target=\"_blank\" href=\"https://www.jstor.org/stable/1911361\">Smith, Suchanek and Williams, 1988</a>.';\r\n\r\n// Define parameters.\r\napp.numPracticePeriods = 1;\r\napp.numMarketPeriods  = 10;\r\napp.numPeriods = app.numPracticePeriods + app.numMarketPeriods;\r\napp.tradingEndowments = [\r\n    {\r\n        cash: 225,\r\n        shares: 3\r\n    },\r\n    {\r\n        cash: 945,\r\n        shares: 1\r\n    }\r\n]\r\napp.practiceEndowment = {\r\n    cash: 5000,\r\n    shares: 10\r\n}\r\napp.divs        = [0, 8, 28, 60];\r\n\r\nvar predictionStage = app.newStage('prediction');\r\n\r\nvar tradingStage = app.newStage('trading');\r\ntradingStage.duration = 120;\r\ntradingStage.groupStart = function(group) {\r\n    group.addTable('offers');\r\n}\r\ntradingStage.playerStart = function(player) { // when a player starts this stage.\r\n    if (player.periodIndex() === 1) {\r\n        player.type = player.idInGroup % 2 === 0;\r\n        player.cash     = app.tradingEndowments[player.type].cash;\r\n        player.shares   = app.tradingEndowments[player.type].shares;\r\n    } else {\r\n        player.cash     = player.old().cash;\r\n        player.shares   = player.old().shares;\r\n    }\r\n}\r\n\r\n// Results stage.\r\nvar resultsStage = app.newStage('results');\r\nresultsStage.duration = 10; // in seconds\r\nresultsStage.groupStart = function(group) { // when a group starts this stage\r\n    group.dividendDraw = Utils.randomEl(app.divs);\r\n    for (var i in group.players) { // i = 0, 1, 2, 3\r\n        var player = group.players[i];\r\n        player.dividends = player.shares * group.dividendDraw;\r\n        player.cash = player.cash + player.dividends;\r\n        // Points only recorded for last period.\r\n        if (group.period.id === group.app().numPeriods) {\r\n            player.points = player.cash;\r\n        }\r\n    }\r\n}\r\n\r\n//  Listen for messages from clients.\r\napp.messages.makeOfferToBuy = function(price) {\r\n    var player = this.participant.player;\r\n    var offer = {price: price, makerPId: player.id, open: true, buyer: player.id};\r\n    player.group.offers.new(offer);\r\n}\r\napp.messages.makeOfferToSell = function(price) {\r\n    var player = this.participant.player;\r\n    var offer = {price: price, makerPId: player.id, open: true, seller: player.id};\r\n    player.group.offers.new(offer);\r\n}\r\napp.messages.cancelOffer = function(id) {\r\n    var group = this.participant.player.group;\r\n    var offer = group.offers.getRow(id);\r\n    app.closeOffer(offer, group);\r\n}\r\napp.messages.acceptOTS = function(id) {\r\n    app.acceptOffer(id, 'buy', this.participant.player);\r\n}\r\napp.messages.acceptOTB = function(id) {\r\n    app.acceptOffer(id, 'sell', this.participant.player);\r\n}\r\n\r\n// Helper functions\r\napp.closeOffer = function(offer, group) {\r\n    offer.open = false;\r\n    group.offers.save();\r\n    group.emit('offersRemove', offer.id);\r\n}\r\napp.acceptOffer = function(id, action, player) {\r\n\r\n    var group = player.group;\r\n    var offer = group.offers.getRow(id);\r\n    var creator = group.player(offer.makerPId);\r\n\r\n    if (action === 'buy') {\r\n        // exit if trade not possible\r\n        if (creator.shares < 1 || player.cash < offer.price) {\r\n            return;\r\n        }\r\n        player.shares++;\r\n        player.cash = player.cash - offer.price;\r\n        creator.shares--;\r\n        creator.cash = creator.cash + offer.price;\r\n        offer.buyer = player.id;\r\n    } else if (action === 'sell') {\r\n        // exit if trade not possible\r\n        if (creator.cash < offer.price || player.shares < 1) {\r\n            return;\r\n        }\r\n        player.shares--;\r\n        player.cash = player.cash + offer.price;\r\n        creator.shares++;\r\n        creator.cash = creator.cash - offer.price;\r\n        offer.seller = player.id;\r\n    }\r\n    group.emit('acceptOffer', {oId: offer.id, time: player.timeInStage()});\r\n    app.closeOffer(offer, group);\r\n\r\n    // Cancel other offers that might now be invalid.\r\n    for (var i=0; i<group.offers.rows.length; i++) {\r\n        var offer = group.offers.rows[i];\r\n        if (offer.open) {\r\n            var creator = group.player(offer.makerPId);\r\n            if (offer.seller === offer.makerPId) {\r\n                if (creator.shares < 1) {\r\n                    app.closeOffer(offer, group);\r\n                }\r\n            }\r\n            if (offer.buyer === offer.makerPId) {\r\n                if (creator.cash < offer.price) {\r\n                    app.closeOffer(offer, group);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    player.io().to(player.roomId()).emit('playerUpdateData', player.asClPlayer());\r\n    creator.io().to(creator.roomId()).emit('playerUpdateData', creator.asClPlayer());\r\n\r\n    player.save();\r\n    creator.save();\r\n}\r\n"}
Wed Apr 25 2018 23:22:05 GMT+0200 (Mitteleuropäische Sommerzeit): received message updateAppPreview: {"appId":"double-auction","options":{}}
Wed Apr 25 2018 23:25:31 GMT+0200 (Mitteleuropäische Sommerzeit): received message appSaveFileContents: {"filename":"app.js","aId":"double-auction","content":"app.description = 'Shares are traded for experimental currency in a double auction. Shares pay random dividends every period. At the end of the game, shares are worth nothing. Reference: <a target=\"_blank\" href=\"https://www.jstor.org/stable/1911361\">Smith, Suchanek and Williams, 1988</a>.';\r\n\r\n// Define parameters.\r\napp.numPracticePeriods = 1;\r\napp.numMarketPeriods  = 10;\r\napp.numPeriods = app.numPracticePeriods + app.numMarketPeriods;\r\napp.tradingEndowments = [\r\n    {\r\n        cash: 225,\r\n        shares: 3\r\n    },\r\n    {\r\n        cash: 945,\r\n        shares: 1\r\n    }\r\n]\r\napp.practiceEndowment = {\r\n    cash: 5000,\r\n    shares: 10\r\n}\r\napp.divs        = [0, 8, 28, 60];\r\n\r\nvar predictionStage = app.newStage('prediction');\r\n\r\nvar tradingStage = app.newStage('trading');\r\ntradingStage.duration = 120;\r\ntradingStage.groupStart = function(group) {\r\n    group.addTable('offers');\r\n}\r\ntradingStage.playerStart = function(player) { // when a player starts this stage.\r\n    // Practice period\r\n    if (player.periodIndex() <= app.numPracticePeriods) {\r\n        player.cash = app.practiceEndowment.cash;\r\n        player.shares = app.practiceEndowment.shares;\r\n    } \r\n    // First trading period\r\n    else if (player.periodIndex() === app.numPracticePeriods + 1) {\r\n        player.type = player.idInGroup % 2 === 0;\r\n        player.cash     = app.tradingEndowments[player.type].cash;\r\n        player.shares   = app.tradingEndowments[player.type].shares;\r\n    } \r\n    // Other trading period\r\n    else {\r\n        player.cash     = player.old().cash;\r\n        player.shares   = player.old().shares;\r\n    }\r\n}\r\n\r\n// Results stage.\r\nvar resultsStage = app.newStage('results');\r\nresultsStage.duration = 10; // in seconds\r\nresultsStage.groupStart = function(group) { // when a group starts this stage\r\n    group.dividendDraw = Utils.randomEl(app.divs);\r\n    for (var i in group.players) { // i = 0, 1, 2, 3\r\n        var player = group.players[i];\r\n        player.dividends = player.shares * group.dividendDraw;\r\n        player.cash = player.cash + player.dividends;\r\n        // Points only recorded for last period.\r\n        if (group.period.id === group.app().numPeriods) {\r\n            player.points = player.cash;\r\n        }\r\n    }\r\n}\r\n\r\n//  Listen for messages from clients.\r\napp.messages.makeOfferToBuy = function(price) {\r\n    var player = this.participant.player;\r\n    var offer = {price: price, makerPId: player.id, open: true, buyer: player.id};\r\n    player.group.offers.new(offer);\r\n}\r\napp.messages.makeOfferToSell = function(price) {\r\n    var player = this.participant.player;\r\n    var offer = {price: price, makerPId: player.id, open: true, seller: player.id};\r\n    player.group.offers.new(offer);\r\n}\r\napp.messages.cancelOffer = function(id) {\r\n    var group = this.participant.player.group;\r\n    var offer = group.offers.getRow(id);\r\n    app.closeOffer(offer, group);\r\n}\r\napp.messages.acceptOTS = function(id) {\r\n    app.acceptOffer(id, 'buy', this.participant.player);\r\n}\r\napp.messages.acceptOTB = function(id) {\r\n    app.acceptOffer(id, 'sell', this.participant.player);\r\n}\r\n\r\n// Helper functions\r\napp.closeOffer = function(offer, group) {\r\n    offer.open = false;\r\n    group.offers.save();\r\n    group.emit('offersRemove', offer.id);\r\n}\r\napp.acceptOffer = function(id, action, player) {\r\n\r\n    var group = player.group;\r\n    var offer = group.offers.getRow(id);\r\n    var creator = group.player(offer.makerPId);\r\n\r\n    if (action === 'buy') {\r\n        // exit if trade not possible\r\n        if (creator.shares < 1 || player.cash < offer.price) {\r\n            return;\r\n        }\r\n        player.shares++;\r\n        player.cash = player.cash - offer.price;\r\n        creator.shares--;\r\n        creator.cash = creator.cash + offer.price;\r\n        offer.buyer = player.id;\r\n    } else if (action === 'sell') {\r\n        // exit if trade not possible\r\n        if (creator.cash < offer.price || player.shares < 1) {\r\n            return;\r\n        }\r\n        player.shares--;\r\n        player.cash = player.cash + offer.price;\r\n        creator.shares++;\r\n        creator.cash = creator.cash - offer.price;\r\n        offer.seller = player.id;\r\n    }\r\n    group.emit('acceptOffer', {oId: offer.id, time: player.timeInStage()});\r\n    app.closeOffer(offer, group);\r\n\r\n    // Cancel other offers that might now be invalid.\r\n    for (var i=0; i<group.offers.rows.length; i++) {\r\n        var offer = group.offers.rows[i];\r\n        if (offer.open) {\r\n            var creator = group.player(offer.makerPId);\r\n            if (offer.seller === offer.makerPId) {\r\n                if (creator.shares < 1) {\r\n                    app.closeOffer(offer, group);\r\n                }\r\n            }\r\n            if (offer.buyer === offer.makerPId) {\r\n                if (creator.cash < offer.price) {\r\n                    app.closeOffer(offer, group);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    player.io().to(player.roomId()).emit('playerUpdateData', player.asClPlayer());\r\n    creator.io().to(creator.roomId()).emit('playerUpdateData', creator.asClPlayer());\r\n\r\n    player.save();\r\n    creator.save();\r\n}\r\n"}
Wed Apr 25 2018 23:25:31 GMT+0200 (Mitteleuropäische Sommerzeit): received message updateAppPreview: {"appId":"double-auction","options":{}}
Thu Apr 26 2018 00:38:46 GMT+0200 (Mitteleuropäische Sommerzeit): received message appSaveFileContents: {"filename":"client.html","aId":"double-auction","content":"<script type=\"text/javascript\" src='/participant/jtree.js'></script>\r\n<script type=\"text/javascript\" src=\"/double-auction/client.js\"></script>    <!-- Client behavior for this app -->\r\n<script type=\"text/javascript\" src=\"/shared/popper.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/shared/bootstrap.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/shared/chartjs/Chart.bundle.min.js\"></script>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/double-auction/client.css\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/shared/bootstrap.min.css\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/shared/font-awesome-5.0.8/css/fontawesome-all.min.css\">\r\n\r\n<div jt-status='active' class='tradingDiv' jt-stage='trading'>\r\n    <div id='tradingInfo' class='view' style='height: 94vh; margin: 3vh; justify-content: center; display: flex; flex-direction: column; align-items: stretch;'>\r\n        <div id='timeDiv' class='box' style='display: flex; justify-content: center; border-bottom: 1px solid rgba(0,0,0,.1)'>\r\n            <span style='padding-right: 5rem;'>\r\n                <span data-toggle=\"tooltip\" title=\"The number of periods remaining in this experiment.\">\r\n                    Period:\r\n                </span>\r\n                <span jt-text='period.id'>-</span>/<span jt-text='app.numPeriods'>-</span>\r\n            </span>\r\n            <span id='time-remaining-div'>\r\n                <span data-toggle=\"tooltip\" title=\"The time remaining in the current period.\">\r\n                    Time:\r\n                </span>\r\n                <span jt-text='clock.minutes'>mm</span>:<span jt-text='clock.seconds'>ss</span>\r\n            </span>\r\n        </div>\r\n        <div id='infoDiv' class='box' style='display: flex; flex: 1 1 auto;'>\r\n            <div class='box' style='flex: 0 0 auto;'>\r\n                <table class='table table-hover'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Period</th>\r\n                            <th>Divs. left</th>\r\n                            <th>E(d)</th>\r\n                            <th>FV</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody id='fvTable'>\r\n                    </tbody>\r\n                </table>\r\n                <br>\r\n                <div class='btn btn-primary' onclick='jt.toggleAutoplay()'>Toggle autoplay</div>\r\n            </div>\r\n            <div style='display: flex; flex: 1 1 auto; flex-direction: column; border-left: 1px solid rgba(0,0,0,.1); '>\r\n                <div id='inventory' style='display: flex; justify-content: center'>\r\n                    <span class='mx-5' style='display: flex; flex-direction: column; align-items: center;'>\r\n                        <span jt-text='player.cash' jt-decimals=0 style='font-size: 48pt;'>xx</span>\r\n                        <span data-toggle=\"tooltip\" title=\"The amount of cash you have. Exchanged for EUR at the end of the experiment.\">\r\n                            Cash (E$)\r\n                        </span>\r\n                    </span>\r\n                    <span class='mx-5' style='display: flex; flex-direction: column; align-items: center;'>\r\n                        <span jt-text='player.shares' style='font-size: 48pt;'>xx</span>\r\n                        <span data-toggle=\"tooltip\" title=\"The amount of shares you have. Shares pay dividends at the end of every period.\">\r\n                            Shares\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <hr>\r\n                <div class='box' style='display: flex; flex: 1 1 auto'>\r\n                    <div id='otbDiv' style='padding-left: 1rem; padding-right: 1rem; border-right: 1px solid rgba(0,0,0,.1);'>\r\n                        <div class='offerBox'>\r\n                            <div>Enter buy price (E$):</div>\r\n                            <input id='offerToBuyPrice' type='number' min='1' jt-max='player.cash' step='1' oninput='checkIfValidOTBPrice()' onkeyup='checkIfValidOTBPrice()'>\r\n                            <button id='makeOTBButton' class='btn btn-success' onclick='makeOfferToBuy()'>Make buy offer</button>\r\n                        </div>\r\n                        <div class='offerBox'>\r\n                            <div>Enter sell price (E$):</div>\r\n                            <input id='offerToSellPrice' type='number' min='1' max='1000' step='1' oninput='checkIfValidOTSPrice()' onkeyup='checkIfValidOTSPrice()'>\r\n                            <button id='makeOTSButton' class='btn btn-danger' onclick='makeOfferToSell()'>Make sell offer</button>\r\n                        </div>\r\n                    </div>\r\n                    <div id='otsDiv' style='padding-left: 1rem; border-right: 1px solid rgba(0,0,0,.1); padding-right: 1rem;'>\r\n                        <h5>Offers to buy</h5>\r\n                        <div>\r\n                            <select id='selectOTB' jt-table='offers' jt-show='price' jt-decimals='2' jt-sortasc='price' jt-filter='row.open && row.seller === undefined' size=5 style='width: 100px'></select>\r\n                        </div>\r\n                        <span>\r\n                            <button jt-select='selectOTB' jt-action='acceptOTB' jt-enabledIf='selRow !== null && selRow.makerPId !== player.id && player.shares > 0'>Accept</button>\r\n                            <button jt-select='selectOTB' jt-action='cancelOffer' jt-enabledIf='selRow !== null && selRow.makerPId === player.id'>Cancel</button>\r\n                        </span>\r\n                    </div>\r\n                    <div style='padding-left: 1rem;'>\r\n                        <h5>Offers to sell</h5>\r\n                        <div>\r\n                            <select id='selectOTS' jt-table='offers' jt-show='price' jt-decimals='2' jt-sortdesc='price' jt-filter='row.open && row.buyer === undefined' size=5 style='width: 100px'></select>\r\n                        </div>\r\n                        <span>\r\n                            <button jt-select='selectOTS' jt-action='acceptOTS' jt-enabledIf='selRow !== null && selRow.makerPId !== player.id && player.cash >= selRow.price'>Accept</button>\r\n                            <button jt-select='selectOTS' jt-action='cancelOffer' jt-enabledIf='selRow !== null && selRow.makerPId === player.id'>Cancel</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id='tradingChart' class='view'>\r\n        <div class='box'>\r\n            <canvas id=\"tradesChart\" width=\"800\" height=\"400\"></canvas>\r\n        </div>\r\n    </div>\r\n    <div id='tradingControls'>\r\n        <div class='btn btn-primary' id='view-tradingInfo' onclick='jt.setView(\"tradingInfo\")'><i class=\"fa fa-3x fa-shopping-cart\"></i></div>\r\n        <div class='btn btn-primary' id='view-tradingChart' onclick='jt.setView(\"tradingChart\")'><i class=\"fa fa-3x fa-chart-bar\"></i></div>\r\n    </div>\r\n</div>\r\n\r\n<div jt-status='playing'>\r\n    <div jt-stage='results' class='box' style='height: 94vh; margin: 3vh; justify-content: center; display: flex; flex-direction: column; align-items: center; font-size: 2rem;'>\r\n        <div>\r\n            <span data-toggle=\"tooltip\" title=\"The number of periods remaining in this experiment.\">\r\n                Period:\r\n            </span>\r\n            <span jt-text='period.id'>-</span>/<span jt-text='app.numPeriods'>-</span>\r\n        </div>\r\n        <div>\r\n            <span data-toggle=\"tooltip\" title=\"The time remaining in the current period.\">\r\n                Time:\r\n            </span>\r\n            <span jt-text='clock.minutes'>mm</span>:<span jt-text='clock.seconds'>ss</span>\r\n        </div>\r\n        <br>\r\n        <b>Dividends:</b>\r\n        <b style='font-size: 3rem'>E$<span jt-text='player.dividends'></span></b>\r\n        <br>\r\n        <div>Per share (E$): <span jt-text='group.dividendDraw'></span></div>\r\n        <div>Cash (E$): <span jt-text='player.cash' jt-decimals=2></span></div>\r\n        <div>Shares: <span jt-text='player.shares'></span></div>\r\n        <!-- <form>\r\n        <button type='submit'>OK</button>\r\n    </form> -->\r\n</div>\r\n</div>\r\n<div jt-status='waiting' class='box' style='height: 94vh; margin: 3vh; justify-content: center; display: flex; flex-direction: column; align-items: center; font-size: 2rem;'>\r\n    <span style='font-weight: bold;'>Waiting</span>\r\n    <div style='margin-top: 1em;'>The experiment will continue soon.</div>\r\n</div>\r\n"}
Thu Apr 26 2018 00:38:46 GMT+0200 (Mitteleuropäische Sommerzeit): received message updateAppPreview: {"appId":"double-auction","options":{}}
Thu Apr 26 2018 00:38:52 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection: usdQq4rYk2_ZgS39AAAB, id=null, pwd=null, session=null
Thu Apr 26 2018 00:38:52 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection to ADMIN
Thu Apr 26 2018 00:38:52 GMT+0200 (Mitteleuropäische Sommerzeit): Server.refreshAdmin: socket_usdQq4rYk2_ZgS39AAAB
Thu Apr 26 2018 00:38:52 GMT+0200 (Mitteleuropäische Sommerzeit): refreshAdmin: socket_usdQq4rYk2_ZgS39AAAB, userId = owen
Thu Apr 26 2018 00:38:52 GMT+0200 (Mitteleuropäische Sommerzeit): received message messages: [{"msgName":"openSession","msgData":"20180422-224245-431"}]
Thu Apr 26 2018 00:38:52 GMT+0200 (Mitteleuropäische Sommerzeit): received message openSession: "20180422-224245-431"
Thu Apr 26 2018 00:40:19 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection: y9p7w4ofaxUX9ilgAAAC, id=null, pwd=null, session=null
Thu Apr 26 2018 00:40:19 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection to ADMIN
Thu Apr 26 2018 00:40:19 GMT+0200 (Mitteleuropäische Sommerzeit): Server.refreshAdmin: socket_y9p7w4ofaxUX9ilgAAAC
Thu Apr 26 2018 00:40:19 GMT+0200 (Mitteleuropäische Sommerzeit): refreshAdmin: socket_y9p7w4ofaxUX9ilgAAAC, userId = owen
Thu Apr 26 2018 00:40:19 GMT+0200 (Mitteleuropäische Sommerzeit): received message messages: [{"msgName":"openSession","msgData":"20180422-224245-431"}]
Thu Apr 26 2018 00:40:19 GMT+0200 (Mitteleuropäische Sommerzeit): received message openSession: "20180422-224245-431"
Thu Apr 26 2018 00:46:36 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection: dGaro_CdCwIvCC_cAAAD, id=null, pwd=null, session=null
Thu Apr 26 2018 00:46:36 GMT+0200 (Mitteleuropäische Sommerzeit): socket connection to ADMIN
Thu Apr 26 2018 00:46:36 GMT+0200 (Mitteleuropäische Sommerzeit): Server.refreshAdmin: socket_dGaro_CdCwIvCC_cAAAD
Thu Apr 26 2018 00:46:36 GMT+0200 (Mitteleuropäische Sommerzeit): refreshAdmin: socket_dGaro_CdCwIvCC_cAAAD, userId = owen
Thu Apr 26 2018 00:46:36 GMT+0200 (Mitteleuropäische Sommerzeit): received message messages: [{"msgName":"openSession","msgData":"20180422-224245-431"}]
Thu Apr 26 2018 00:46:36 GMT+0200 (Mitteleuropäische Sommerzeit): received message openSession: "20180422-224245-431"
